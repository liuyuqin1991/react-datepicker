(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{M6rM:function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return b})),r.d(t,"default",(function(){return m}));var c=r("Fcif"),n=r("+I+c"),a=(r("mXGw"),r("/FXl")),i=r("TjRS"),o=(r("aD51"),["components"]),b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!Object.prototype.hasOwnProperty.call(b,"__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"doc/Introduction.mdx"}});var p={_frontmatter:b},l=i.a;function m(e){var t=e.components,r=Object(n.a)(e,o);return Object(a.b)(l,Object(c.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"react-datepicker"},"react-datepicker"),Object(a.b)("p",null,"Datepicker 基础组件库，react hook + typescript 代码风格，包含 DatePicker，TimePicker，DateRangePicker 三个子组件:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"DatePicker，标准单日期选择组件，支持日，周，月，季，年，日期时间共 6 种日期类型选择；"),Object(a.b)("li",{parentName:"ul"},"TimePicker，标准时间选择组件，全新设计，避免滚动选择，特定时间点直观显示"),Object(a.b)("li",{parentName:"ul"},"DateRangePicker，范围双日期选择组件，支持日，周，月，季，年 5 种日期维度选择；")),Object(a.b)("blockquote",null,Object(a.b)("i",null,"组件使用的第三方库：lodash，dayjs，classnames，react-popper，rc-slider")),Object(a.b)("h2",{id:"安装"},"安装"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"npm i react-datepicker-ts\n\n")),Object(a.b)("h2",{id:"使用"},"使用"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"import { DatePicker } from 'react-datepicker-ts';\n\n<DatePicker />\n\n// or\nimport { TimePicker } from 'react-datepicker-ts';\n\n<TimePicker />\n\n// or\n\nimport { DateRangePicker } from 'react-datepicker-ts';\n\n<DateRangePicker />\n\n")),Object(a.b)("h2",{id:"主题色变更"},"主题色变更"),Object(a.b)("p",null,"组件默认采用的是绿色主题色系，如需变更，只需要在项目 css 中重写两个主题色相关变量即可，如下图改为 antd 主题色"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"// index.css\n:root {\n  --c-datepicker-primary: #1890FF;\n  --c-datepicker-primary-light: #bae7ff;\n}\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"doc/Introduction.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---doc-introduction-mdx-65689f4ffd585e2f0868.js.map