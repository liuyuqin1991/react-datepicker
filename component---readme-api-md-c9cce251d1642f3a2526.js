(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{SXkF:function(e,t,b){"use strict";b.r(t),b.d(t,"_frontmatter",(function(){return r})),b.d(t,"default",(function(){return d}));var n=b("Fcif"),a=b("+I+c"),c=(b("mXGw"),b("/FXl")),l=b("TjRS"),o=(b("aD51"),["components"]),r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!Object.prototype.hasOwnProperty.call(r,"__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README_API.md"}});var u={_frontmatter:r},j=l.a;function d(e){var t=e.components,b=Object(a.a)(e,o);return Object(c.b)(j,Object(n.a)({},u,b,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"api-参数详细说明"},"API 参数详细说明"),Object(c.b)("h2",{id:"datepicker-参数"},"DatePicker 参数"),Object(c.b)("h3",{id:"selectionmode"},"selectionMode"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v1.0")),Object(c.b)("p",null,"日期模式，默认值为",Object(c.b)("inlineCode",{parentName:"p"},"day"),"，可选值为",Object(c.b)("inlineCode",{parentName:"p"}," day | week | month | quarter | year | daytime"),"。"),Object(c.b)("h3",{id:"defaultdate"},"defaultDate"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Date | 可选 | v1.0")),Object(c.b)("p",null,"默认日期。"),Object(c.b)("h3",{id:"classname"},"className"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v1.0")),Object(c.b)("p",null,"日期组件容器 className。"),Object(c.b)("h3",{id:"onpick"},"onPick"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Function | 必选 | v1.0")),Object(c.b)("p",null,"选择日期回调函数."),Object(c.b)("p",null,"示例:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"/*\n* 回调参数d包含开始和结束日期的数组，当只是日期选择而不包含时间选择时，时间部分均为当前时间\n* 1. 选择day模式，startDate与endDate相等\n* 2. 选择week模式，startDate为当周的起始日期，endDate为当周的结束日期\n* 3. 选择month模式，startDate为当月的起始日期，endDate为当月的结束日期\n* 4. 选择quarter模式，startDate为当季度的起始日期，endDate为当季度的结束日期\n* 5. 选择year模式，startDate为当年的起始日期，endDate为当年的结束日期\n*/\nconst onPick = (d: Date[]) => {\n  const startDate = d[0];\n  const endDate = d[1];\n};\n")),Object(c.b)("h3",{id:"format"},"format"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v1.0")),Object(c.b)("p",null,"显示在输入框的格式。组件引入了 dayjs，必须符合 dayjs 的 format 规范。",Object(c.b)("a",{parentName:"p",href:"https://dayjs.gitee.io/docs/zh-CN/display/format"},"查看 format 规范")),Object(c.b)("h3",{id:"placeholder"},"placeholder"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v1.0")),Object(c.b)("p",null,"未选日期时的占位符。"),Object(c.b)("h3",{id:"disableddatefunc"},"disabledDateFunc"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Function | 可选 | v1.0")),Object(c.b)("p",null,"禁用日期回调函数。"),Object(c.b)("p",null,"示例："),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"\nimport dayjs from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\n\ndayjs.extend(isBetween);\n\nconst disabledDateFunc = (currentDate: Date): boolean => {\n  const d = dayjs(currentDate);\n  const today = dayjs();\n  // 只能选择当日的前后一个月日期内\n  if (!d.isBetween(today.subtract(1, 'month'), today.add(1, 'month'))) return true;\n};\n\n")),Object(c.b)("h3",{id:"enableclear"},"enableClear"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v2.0")),Object(c.b)("p",null,"允许日期清除，默认为 true。"),Object(c.b)("h3",{id:"enableshowweeknum"},"enableShowWeekNum"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v3.0")),Object(c.b)("p",null,"允许周数显示，默认为 true。"),Object(c.b)("h2",{id:"timepicker-参数"},"TimePicker 参数"),Object(c.b)("h3",{id:"defaulttime"},"defaultTime"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Date | 可选 | v2.0")),Object(c.b)("p",null,"默认时间。"),Object(c.b)("h3",{id:"classname-1"},"className"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v2.0")),Object(c.b)("p",null,"时间组件容器 className。"),Object(c.b)("h3",{id:"onpick-1"},"onPick"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Function | 必选 | v2.0")),Object(c.b)("p",null,"选择时间回调函数."),Object(c.b)("p",null,"示例:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"/*\n* 回调参数d为一个Date时间，只有时分秒有效\n*/\nconst onPick = (d: Date) => {\n  const hour = d.getHours();\n  const minute = d.getMinutes();\n  const second = d.getSeconds();\n};\n")),Object(c.b)("h3",{id:"format-1"},"format"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v2.0")),Object(c.b)("p",null,"显示在输入框的格式。组件引入了 dayjs，必须符合 dayjs 的 format 规范。",Object(c.b)("a",{parentName:"p",href:"https://dayjs.gitee.io/docs/zh-CN/display/format"},"查看 format 规范")),Object(c.b)("h3",{id:"placeholder-1"},"placeholder"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v2.0")),Object(c.b)("p",null,"未选时间时的占位符。"),Object(c.b)("h3",{id:"enablesecond"},"enableSecond"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v2.0")),Object(c.b)("p",null,"允许秒选择，默认为 true。"),Object(c.b)("h3",{id:"enableclear-1"},"enableClear"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v2.0")),Object(c.b)("p",null,"允许时间清除，默认为 true。"),Object(c.b)("h2",{id:"daterangepicker-参数"},"DateRangePicker 参数"),Object(c.b)("h3",{id:"selectionmode-1"},"selectionMode"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v3.0")),Object(c.b)("p",null,"日期模式，默认值为",Object(c.b)("inlineCode",{parentName:"p"},"day"),"，可选值为",Object(c.b)("inlineCode",{parentName:"p"},"day | week | month | quarter | year"),"。"),Object(c.b)("h3",{id:"defaultdate-1"},"defaultDate"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Date[] | 可选 | v3.0")),Object(c.b)("p",null,"默认日期，数组类型，需要放入一个开始日期和一个结束日期。"),Object(c.b)("h3",{id:"classname-2"},"className"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v3.0")),Object(c.b)("p",null,"日期组件容器 className。"),Object(c.b)("h3",{id:"onpick-2"},"onPick"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Function | 必选 | v3.0")),Object(c.b)("p",null,"选择日期回调函数."),Object(c.b)("p",null,"示例:"),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"/*\n* 回调参数d包含开始和结束日期的数组，当只是日期选择而不包含时间选择时，时间部分均为当前时间\n* 1. 选择day模式，startDate为起始日期，endDate为结束日期\n* 2. 选择week模式，startDate为起始日期里选择的周的第一天，endDate为结束日期里选择的周的最后一天\n* 3. 选择month模式，startDate为起始日期里选择的月的第一天，endDate为结束日期里选择的月的最后一天\n* 4. 选择quarter模式，startDate为起始日期里选择的季度的第一天，endDate为结束日期里选择的季度的最后一天\n* 5. 选择year模式，startDate为起始日期里选择的年的第一天，endDate为结束日期里选择的年的最后一天\n*/\nconst onPick = (d: Date[]) => {\n  const startDate = d[0];\n  const endDate = d[1];\n};\n")),Object(c.b)("h3",{id:"format-2"},"format"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v3.0")),Object(c.b)("p",null,"显示在输入框的格式。组件引入了 dayjs，必须符合 dayjs 的 format 规范。",Object(c.b)("a",{parentName:"p",href:"https://dayjs.gitee.io/docs/zh-CN/display/format"},"查看 format 规范")),Object(c.b)("h3",{id:"placeholder-2"},"placeholder"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v3.0")),Object(c.b)("p",null,"未选日期时的占位符。"),Object(c.b)("h3",{id:"disableddatefunc-1"},"disabledDateFunc"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Function | 可选 | v3.0")),Object(c.b)("p",null,"禁用日期回调函数。禁用日期会同时在起始和结束日期选择里生效"),Object(c.b)("p",null,"示例："),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre"},"\nimport dayjs from 'dayjs';\nimport isBetween from 'dayjs/plugin/isBetween';\n\ndayjs.extend(isBetween);\n\nconst disabledDateFunc = (currentDate: Date): boolean => {\n  const d = dayjs(currentDate);\n  const today = dayjs();\n  // 只能选择当日的前后一个月日期内\n  if (!d.isBetween(today.subtract(1, 'month'), today.add(1, 'month'))) return true;\n};\n\n")),Object(c.b)("h3",{id:"enableclear-2"},"enableClear"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v3.0")),Object(c.b)("p",null,"允许日期清除，默认为 true。"),Object(c.b)("h3",{id:"enableshowweeknum-1"},"enableShowWeekNum"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Boolean | 可选 | v3.0")),Object(c.b)("p",null,"允许周数显示，默认为 true。"),Object(c.b)("h3",{id:"titlelabel"},"titleLabel"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String | 可选 | v3.0")),Object(c.b)("p",null,"标题文字，默认值为'请选择日期范围'。"),Object(c.b)("h3",{id:"contentlabel"},"contentLabel"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"String[] | 可选 | v3.0")),Object(c.b)("p",null,"内容文字数组，默认值为","['起始日期：', '结束日期：']","。"))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README_API.md"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-api-md-c9cce251d1642f3a2526.js.map